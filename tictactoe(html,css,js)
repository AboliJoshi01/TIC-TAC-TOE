<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe Game</title>
    <style>
        body {
            color:rgb(199, 52, 52);
            background-image: url("https://i.pinimg.com/474x/92/8a/0e/928a0ef392b7b4dccb30b060f3f2eb4e.jpg");
            background-repeat:no-repeat;
            background-size:cover;
            background-position: center;
            font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
        }
        h1 {
            text-align: center;
        }
        .board {
            display:grid;
            grid-template-columns:repeat(3,100px);
            grid-gap: 10px;
        }
        .cell {
            width: 100px;
            height: 100px;
            background-color: #8dccf4;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 5em;
            cursor:grab;
        }
        #chartContainer {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1> Tic-Tac-Toe Game</h1>
    <div class="board" id="board">
        <div class="cell" data-index="0"></div>
        <div class="cell" data-index="1"></div>
        <div class="cell" data-index="2"></div>
        <div class="cell" data-index="3"></div>
        <div class="cell" data-index="4"></div>
        <div class="cell" data-index="5"></div>
        <div class="cell" data-index="6"></div>
        <div class="cell" data-index="7"></div>
        <div class="cell" data-index="8"></div>
    </div>

    <div id="chartContainer">
        <canvas id="winChart" width="200" height="200"></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const board = document.getElementById('board');
        const cells = document.querySelectorAll('.cell');
        let currentPlayer = 'X';
        let gameActive = true;
        let gameState = ["", "", "", "", "", "", "", "", ""];
        let playerWins = { 'X': 0, 'O': 0, 'draw': 0 };
        
        const winChartContext = document.getElementById('winChart').getContext('2d');
        let winChart = new Chart(winChartContext, {
            type: 'pie',
            data: {
                labels: ['Player X', 'Player O', 'Draw'],
                datasets: [{
                    data: [1, 1, 1],
                    backgroundColor: ['#ff6384', '#36a2eb', '#ffcd56']
                }]
            },
            options: {
                responsive: true
            }
        });

        const winningConditions = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        function handleClick(event) {
            const cell = event.target;
            const cellIndex = parseInt(cell.getAttribute('data-index'));

            if (gameState[cellIndex] !== "" || !gameActive) {
                return;
            }

            gameState[cellIndex] = currentPlayer;
            cell.textContent = currentPlayer;
            checkResult();

            if (gameActive) {
                currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            }
        }

        function checkResult() {
            let roundWon = false;

            for (let i = 0; i < winningConditions.length; i++) {
                const [a, b, c] = winningConditions[i];
                if (gameState[a] !== "" && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {
                    roundWon = true;
                    break;
                }
            }

            if (roundWon) {
                gameActive = false;
                playerWins[currentPlayer]++;
                updateChart();
                setTimeout(() => alert(`Player ${currentPlayer} Wins!`), 100);
                return;
            }

            if (!gameState.includes("")) {
                gameActive = false;
                playerWins['draw']++;
                updateChart();
                setTimeout(() => alert("It's a Draw!"), 100);
            }
        }

        function updateChart() {
            winChart.data.datasets[0].data = [playerWins['X'], playerWins['O'], playerWins['draw']];
            winChart.update();
        }

        cells.forEach(cell => cell.addEventListener('click', handleClick));
    </script>
</body>
</html>
